MYSQL - SLAM

02/12/21

Nouveau dossier SQL
Ouvrir vs code
Terminal

mariadb -u root -p
show databases;
use mysql;
show tables;
SELECT * FROM user;

Créer schema.sql (cf git https://github.com/Lem0nRavioli/SIO_2021/tree/main/Dev/SQL/SLAM pour contenu)

CREATE OR REPLACE DATABASE gefor;

sauvegarder
taper terminal: exit

mariadb -u root -p < schema.sql 

(update schema.sql, cf git)

Order of request:
SELECT *
FROM table
WHERE condition
GROUP BY expression
HAVING condition
{ UNION | INTERSECT | EXCEPT }
ORDER BY expression
LIMIT count
OFFSET start

https://sql.sh/cours/select
select email from user;
select psw from user;

https://sql.sh/cours/distinct
select distinct psw from user; (même psw ne sont select qu'une fois)

https://sql.sh/cours/where
select psw from user where email = 'test';
select psw from user where email in ('test', 'test3');

https://sql.sh/cours/group-by
select email, sum(tarif) from user group by email;
select email, sum(tarif) as tarif from user group by email;
select email, count(email) from user group by email;

https://sql.sh/cours/having
select email, sum(tarif) from user group by email having sum(tarif) > 80;
select email, sum(tarif) as tarif from user group by email having tarif > 80;

https://sql.sh/cours/order-by
select tarif, email from user order by tarif desc, email asc;
select sum(tarif), email from user group by email  order by tarif desc, email asc;

https://sql.sh/cours/limit
select sum(tarif), email from user group by email  order by tarif desc, email asc limit 3;
select sum(tarif), email from user group by email  order by tarif desc, email asc limit 3 offset 2;
select sum(tarif), email from user group by email  order by tarif desc, email asc limit 2, 3; (autre syntax)
select * from user offset 3 rows;

https://sql.sh/cours/update
update user set tarif = 0 where tarif > 1000;
update user set tarif = 200, psw = 'passwoodywoodpecker', email = 'testemail' where tarif = 0;
update user set tarif = 300, psw = 'passwoodywoodpecker', email = 'testemail' where tarif = 200 and email = 'testemail';
// sans where, l'update est effective sur toute la colonne

https://sql.sh/cours/delete
delete from user where tarif < 20;
// delete toutes les données	=> delete from user; (delete sans reset auto increment)
// delete toutes les données	=> truncate table user; (delete + reset auto increment)


========================================================================================
EXERCICES:
========================================================================================


create or replace database exercices;
mariadb -u root -p < Exercices/villes_france.sql;
mariadb -u root -p < Exercices/departement.sql;
show columns from villes;



Obtenir la liste des 10 villes les plus peuplées en 2012
select ville_nom from villes order by ville_population_2012 desc limit 10; 

Obtenir la liste des 50 villes ayant la plus faible superficie
select ville_nom from villes order by ville_surface asc limit 50;

Obtenir la liste des départements d’outres-mer, c’est-à-dire ceux dont le numéro de département commencent par “97”
select ville_departement from villes where ville_departement like "97%";

Obtenir le nom des 10 villes les plus peuplées en 2012, ainsi que le nom du département associé
SELECT
    ville_nom,
    ville_population_2012,
    ville_departement,
    departement_nom
FROM
    villes,
    departement
WHERE
    ville_departement = departement_code
ORDER BY
    ville_population_2012 DESC
LIMIT
    10;

Obtenir la liste du nom de chaque département, associé à son code et du nombre de commune au sein de ces département, en triant afin d’obtenir en priorité les départements qui possèdent le plus de communes
SELECT
    departement_nom,
    departement_code,
    count(ville_departement)
FROM
    villes,
    departement
WHERE
    villes.ville_departement = departement_code
GROUP BY
    departement_nom
ORDER BY
    count(ville_departement) DESC;
	
	
Obtenir la liste des 10 plus grands départements, en terme de superficie
SELECT 
    departement_nom,
    sum(ville_surface)
FROM
    villes,
    departement
WHERE
    villes.ville_departement = departement.departement_code
GROUP BY 
    departement_nom
ORDER BY
    sum(ville_surface) DESC
LIMIT
    10;
	
Compter le nombre de villes dont le nom commence par “Saint”
select count(ville_nom) from villes where ville_nom like "Saint%";

Obtenir la liste des villes qui ont un nom existants plusieurs fois, et trier afin d’obtenir en premier celles dont le nom est le plus souvent utilisé par plusieurs communes
SELECT
    ville_nom,
    count(ville_nom)
FROM
    villes
GROUP BY 
    ville_nom
ORDER BY
    count(ville_nom) DESC
LIMIT 10;


Obtenir en une seule requête SQL la liste des villes dont la superficie est supérieur à la superficie moyenne
SELECT
    ville_nom,
    ville_surface
FROM
    villes
HAVING
    ville_surface > (select avg(ville_surface) from villes)
LIMIT 10;

Obtenir la liste des départements qui possèdent plus de 2 millions d’habitants
SELECT
    departement_nom,
    sum(ville_population_2012)
FROM
    villes,
    departement
WHERE
    ville_departement = departement_code
GROUP BY
    departement_nom
HAVING
    sum(ville_population_2012)> 2000000
LIMIT
    10;
	
Remplacez les tirets par un espace vide, pour toutes les villes commençant par “SAINT-” (dans la colonne qui contient les noms en majuscule)
UPDATE 
    villes
SET 
    ville_nom = REPLACE(ville_nom, 'SAINT-', 'SAINT ')
WHERE 
    ville_nom LIKE 'SAINT%';

SELECT
    ville_nom
FROM
    villes
WHERE 
    ville_nom LIKE 'SAINT%'
LIMIT 10;
